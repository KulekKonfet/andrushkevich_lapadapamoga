import os
import logging

from django.core.management.base import BaseCommand
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from telegram import Update

from volunteers.models import VolunteerProject


# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –õ–∞–ø–∞–î–∞–ø–∞–º–æ–≥–∞ üêæ")

async def projects(update: Update, context: ContextTypes.DEFAULT_TYPE):
    projects = VolunteerProject.objects.all()
    if projects:
        message = "\n\n".join(
            [f"üìå {p.title}\n{p.description}" for p in projects]
        )
    else:
        message = "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ üò¢"
    await update.message.reply_text(message)

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "/start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n"
        "/projects - —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤\n"
        "/help - –ø–æ–º–æ—â—å"
    )


# –û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ Django
class Command(BaseCommand):
    help = "–ó–∞–ø—É—Å–∫–∞–µ—Ç Telegram-–±–æ—Ç–∞"

    def handle(self, *args, **kwargs):
        token = os.getenv("TELEGRAM_BOT_TOKEN")
        if not token:
            self.stderr.write("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.")
            return

        application = ApplicationBuilder().token(token).build()

        application.add_handler(CommandHandler("start", start))
        application.add_handler(CommandHandler("projects", projects))
        application.add_handler(CommandHandler("help", help_command))

        self.stdout.write("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞—é –∫–æ–º–∞–Ω–¥—ã –≤ Telegram...")
        application.run_polling()
